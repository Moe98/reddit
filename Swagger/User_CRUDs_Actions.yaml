swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: Beta Stories
  termsOfService: ''
tags:
  - name: Users
    description: Everything about Users
  - name: Actions
    description: User to User Actions
schemes:
  - https
  - http
paths:
  /api/users/signUp:
    post:
      tags:
        - Users
      summary: User signs up in to his account
      description: ''
      operationId: UserSignUp
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: functionName
          required: true
          type: string
          description: signUp
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
              username:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
              birthDate:
                type: string
                format: date
              hasProfilePhoto:
                type: boolean
      responses:
        '200':
          description: Signed up successfully
          schema:
            $ref: '#/definitions/CompleteUser'
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}':
    get:
      tags:
        - Users
      summary: Getting a user's full record
      description: CRUD based operation
      operationId: GetUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: header
          name: functionName
          required: true
          type: string
          description: getUser
      responses:
        '200':
          description: User Fetched successfully
          schema:
            $ref: '#/definitions/CompleteUser'
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
    delete:
      tags:
        - Users
      summary: User deletes his account
      description: ''
      operationId: UserDeleteAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
        - in: header
          name: functionName
          required: true
          type: string
          description: deleteUser
      responses:
        '200':
          description: Account deleted successfully
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  /api/users/logIn:
    post:
      tags:
        - Users
      summary: User logs in to his account
      description: ''
      operationId: UserLogin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: functionName
          required: true
          type: string
          description: logIn
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string


      responses:
        '200':
          description: Logged in successfully
          schema:
            $ref: '#/definitions/User'
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}/uploadProfilePicture':
    put:
      tags:
        - Users
      summary: 'User uploades his profile picture '
      description: ''
      operationId: UploadProfilePicture
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: photo
          type: file
        - in: path
          name: username
          type: string
          required: true
        - in: header
          name: functionName
          required: true
          type: string
          description: uploadProfilePicture
      responses:
        '200':
          description: Profile Picture Uploaded
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}/deleteProfilePicture':
    delete:
      tags:
        - Users
      summary: 'User deletes his profile picture '
      description: ''
      operationId: DeleteProfilePicture
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: header
          name: functionName
          required: true
          type: string
          description: deleteProfilePicture
      responses:
        '200':
          description: Profile Picture Deleted
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}/editProfile':
    post:
      tags:
        - Users
      summary: User edits his profile
      description: ''
      operationId: UserEditProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              oldPassword:
                type: string
              newPassword:
                type: string
        - in: header
          name: functionName
          required: true
          type: string
          description: editProfile
      responses:
        '200':
          description: profile edited successfully
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/viewProfile/{username}':
    get:
      tags:
        - Actions
      summary: user can view other user's profile
      description: ''
      operationId: UserViewProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: header
          name: functionName
          required: true
          type: string
          description: getUser
      responses:
        '200':
          description: Profile Fetched successfully
          schema:
            $ref: '#/definitions/User'
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}/follow':
    post:
      tags:
        - Actions
      summary: User follows another User
      description: ''
      operationId: UserFollowUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
        - in: header
          name: functionName
          required: true
          type: string
          description: followUser
      responses:
        '200':
          description: User succesffully followed
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}/unfollow':
    post:
      tags:
        - Actions
      summary: User unfollows another User
      description: ''
      operationId: UserUnfollowUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
        - in: header
          name: functionName
          required: true
          type: string
          description: unfollowUser
      responses:
        '200':
          description: User succesffully unfollowed
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}/block':
    post:
      tags:
        - Actions
      summary: User blocks another User
      description: ''
      operationId: UserBlockUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
        - in: header
          name: functionName
          required: true
          type: string
          description: blockUser
      responses:
        '200':
          description: User succesffully blocked
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
  '/api/users/{username}/unblock':
    post:
      tags:
        - Actions
      summary: User unblocks another User
      description: ''
      operationId: UserUnBlockUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
        - in: body
          name: body
          description: ''
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
        - in: header
          name: functionName
          required: true
          type: string
          description: unblockUser
      responses:
        '200':
          description: User succesffully unblocked
          schema:
            type: object
            properties:
              msg:
                type: string
        '405':
          description: Invalid input
          schema:
            description: type of error
            type: object
            properties:
              msg:
                type: string
definitions:
  CompleteUser:
    type: object
    properties:
      id:
        type: string
        format: uuid
      username:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
      birthDate:
        type: string
        format: date-time
      hasProfilePhoto:
        type: boolean
      profilePicture:
        type: string
        format: uri
    xml:
      name: CompleteUser
  User:
    type: object
    properties:
      username:
        type: string
      birthDate:
        type: string
        format: date-time
      hasProfilePhoto:
        type: boolean
      profilePicture:
        type: string
        format: uri
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
